import { Controller } from "triqui-tree";var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.createTemplateTagFirstArg=function(a){return a.raw=a};$jscomp.createTemplateTagFirstArgWithRaw=function(a,b){a.raw=b;return a};var controller=Controller.new(get_algorithm_depth());function get_algorithm_depth(){var a=sessionStorage.getItem("algorithm_depth");if(null===a||7<a)a=4,sessionStorage.setItem("algorithm_depth",a);return BigInt(a)}
function set_algorithm_depth(a){var b=get_algorithm_depth();a={"Es empate":b,"La ganadora es la m\u00e1quina":b-BigInt(1),"El ganador es el jugador":b+BigInt(1)}[a];sessionStorage.setItem("algorithm_depth",0<a?a:4)}function modify_input_attributes(a){switch(a){case "checked":document.querySelectorAll("INPUT").forEach(function(b){b.checked=!1});break;default:document.querySelectorAll("I").forEach(function(b){b.classList.add("disabled")})}}
function end_of_game_screen(){var a=document.getElementById("final_message"),b=controller.get_winner(),d=function(h,k,l,f){var c=document.createElement("h4");c.innerHTML=h;c.style.width=k;0<f.length&&(c.style.opacity="0");c.style.animation=l+" 2s steps(40, end) forwards "+f+", blink .5s step-end infinite alternate";return c};if("Es empate"===b)a.appendChild(d(b,"17rem","single_typing",""));else{var g=b.length/2-1,e=b.substring(0,g);a.appendChild(d(e,"20rem","first_typing",""));e=b.substring(g);a.appendChild(d(e,
"24.3rem","last_typing","2s"))}a.classList.add("typing_text");a=document.getElementById("repeat_button");a.style.opacity="1";a.style.visibility="visible";modify_input_attributes("disabled");set_algorithm_depth(b)}function play_movement(a,b){a.classList.add(b?controller.get_maximizer():controller.get_minimizer(),"used","disabled");b=a.parentNode.querySelector("INPUT");b.checked=!0;b.disabled=!0;a.disabled=!0}document.getElementById("final_message").classList.remove("typing_final_message");modify_input_attributes("checked");
document.getElementById("board").addEventListener("click",function(a){a=a.target;var b=a.classList;!b.contains("icon-box")||b.contains("used")||b.contains("disabled")||(play_movement(a,!1),b=controller.play_turn(a.id.slice(-1)),b!=controller.get_invalid_mv()&&(b=document.getElementById("square_"+b),play_movement(b,!0)),controller.completed_game()&&(a.parentNode.querySelector("INPUT").checked=!0,end_of_game_screen()))});
